void Optimal(int pages[], int numPages, int frameSize) {
    int frames[frameSize], pageFaults = 0;

    for (int i = 0; i < frameSize; i++) {
        frames[i] = -1;  
    }

    printf("\nOptimal Page Replacement:\n");
    for (int i = 0; i < numPages; i++) {
        bool found = false;

        for (int j = 0; j < frameSize; j++) {
            if (frames[j] == pages[i]) {
                found = true;
                printf("%d: ", pages[i]);
                break;
            }
        }

        if (!found) {
            if (i < frameSize) {
                frames[i] = pages[i];  
            } else {
                int farthest = i + 1, replaceIndex = -1;

                
                for (int j = 0; j < frameSize; j++) {
                    int k;
                    for (k = i + 1; k < numPages; k++) {
                        if (frames[j] == pages[k]) {
                            if (k > farthest) {
                                farthest = k;
                                replaceIndex = j;
                            }
                            break;
                        }
                    }
                    if (k == numPages) {
                        replaceIndex = j;
                        break;
                    }
                }
                if (replaceIndex == -1) {
                    replaceIndex = 0;  
                }
                frames[replaceIndex] = pages[i]; 
            }
            pageFaults++;
            printf("Page fault: %d, Frames: ", pages[i]);
        }

        printFrames(frames, frameSize);  
    }

    printf("\nTotal Page Faults (Optimal): %d\n", pageFaults);
}

int main() {
    int numPages, frameSize, pages[MAX];

    printf("Enter the number of pages: ");
    scanf("%d", &numPages);

    printf("Enter the page reference string: ");
    for (int i = 0; i < numPages; i++) {
        scanf("%d", &pages[i]);
    }

    printf("Enter frame size (minimum 3): ");
    scanf("%d", &frameSize);

    if (frameSize < 3) {
        printf("Frame size must be at least 3!\n");
        return -1;
    }

    FCFS(pages, numPages, frameSize);
    LRU(pages, numPages, frameSize);
    Optimal(pages, numPages, frameSize);

    return 0;
}
